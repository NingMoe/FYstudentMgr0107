@model FYstudentMgr.Models.Courses.Class

@{
    ViewBag.Title = "为" + ViewBag.CourseName+"课程添加班级";
}

<div class="container mgt20 mgb80 text">
    <div class="panel panel-green col-lg-9 pd0">
        <div class="panel-heading">
            <a href="/Home/Admin">博奥管理后台</a>>><a href="/Subject/Index">课程管理</a>>><a href="/Course/Details/@ViewBag.CourseID">@ViewBag.CourseName</a>>>添加班级
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="CourseID" value="@ViewBag.CourseID" />
            <input type="hidden" name="CourseName" value="@ViewBag.CourseName" />
            <div class="form-horizontal mgt40 mgr20">
             
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                

                <div class="form-group">
                    @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Arrange, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <textarea id="arrange" name="Arrange" ></textarea>
                        @Html.ValidationMessageFor(model => model.Arrange, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OverDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OverDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OverDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OriginalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">$</span>
                            @Html.EditorFor(model => model.OriginalPrice, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon">.00</span>
                        </div>                      
                        @Html.ValidationMessageFor(model => model.OriginalPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DiscountPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">$</span>
                            @Html.EditorFor(model => model.DiscountPrice, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon">.00</span>
                        </div>
                        @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

               

                <div class="form-group">
                    @Html.LabelFor(model => model.ClassState, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.ClassState, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClassState, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="创建班级" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@Html.Partial("../Shared/Tool")
@section Scripts {
    <script type="text/javascript">

        seajs.use("modules/class/create");
    </script>
}
